package com.ninhongo.interceptor;

import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.TimeUnit;

import org.springframework.stereotype.Component;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@Component
public class RateLimitInterceptor implements HandlerInterceptor {
	
	private final ConcurrentMap<String, RateLimiter> limiters = new ConcurrentHashMap<>();
	
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
		
		//Obtenemos el ID del cliente (Se obtiene la IP)
        String clientId = getClientId(request);
    
        RateLimiter rateLimiter = limiters.computeIfAbsent(clientId, k -> new RateLimiter(5, TimeUnit.MINUTES));
        if (!rateLimiter.allowRequest()) {
            response.setStatus(429);
            response.getWriter().write("Demasiadas solicitudes. Intente nuevamente m√°s tarde.");
            return false;
        }
        return true;
    }

    private String getClientId(HttpServletRequest request) {    	
        return request.getRemoteAddr();
    }
	
}